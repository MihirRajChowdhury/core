name: Tag Release CI on PR Merge to Development

on:
  workflow_dispatch:
    inputs:
      version_type:
        type: choice
        description: Choose version bump type
        options: 
        - -r major
        - -r minor
        - -r patch
        - -p alpha
        - -p beta
        - -p build
        - -p hotfix
        - -p build
        required: true
        default: "-r patch"
  pull_request:
    types:
      - closed
    branches:
      - 'development'

jobs:        
  create_tag:
    runs-on: ubuntu-latest
    permissions: write-all
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'development')
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
      
    steps:

      - name: üõí Checkout repository
        uses: actions/checkout@v4

      - name: üõ† Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: üõ† Setup gh and git
        run: |
          # echo ${{secrets.PAT}} | gh auth login --with-token
          git config user.name "${{ secrets.GITHUB_USER_NAME }}"
          git config user.email "${{ secrets.GITHUB_USER_EMAIL }}"

      - name: üëÄ Process Inputs
        id: release-type-input
        run: |
          if [ -z "${{ github.event.inputs.version_type }}" ]; then
            echo "Setting default version type"
            export VERSION_TYPE_DEFAULT=" -r patch"
          else
            export VERSION_TYPE_DEFAULT="${{ github.event.inputs.version_type }}"
          fi
          echo "Version type: $VERSION_TYPE_DEFAULT"
          echo "::set-output name=version_type::$VERSION_TYPE_DEFAULT"


      - name: ‚¨áÔ∏è Setup Project
        run: | 
         echo Installing Node Modules
         npm ci

      - name: üîÑ Update Attribution
        run: |
         npm run attributions:gen
         chmod +x ./.github/scripts/attribution_header_adder.sh
         bash ./.github/scripts/attribution_header_adder.sh ${{ github.event.repository.name }}
         git pull
         git add ATTRIBUTIONS.md
         git commit -m "docs(global): :memo: update attribution

         update attributions content

         by Publish CI"


      - name: ‚¨ÜÔ∏è Update version
        run:  npm run release -- ${{ steps.release-type-input.outputs.version_type}}

  
      - name: üöÄ Update remote repository
        run: git push --follow-tags origin development
