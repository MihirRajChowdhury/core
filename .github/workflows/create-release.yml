on:
  push:
    # Sequence of patterns matched against refs/tags
    # branches:
    #   - 'development'
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_run:
    workflows: ["Tag Release CI on PR Merge to Development"]
    types:
      - completed

name: Create Release

jobs:
  create-release:
    name: Create Release
    if: |
     github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    # if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: 🛠 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: 🛠 Setup gh and git
        run: |
          echo ${{secrets.PAT}} | gh auth login --with-token
          git config user.name "${{ secrets.GITHUB_USER_NAME }}"
          git config user.email "${{ secrets.GITHUB_USER_EMAIL }}"

## TODO: CHECKOUT TAG

      - name: 🛒 Checkout repository
        uses: actions/checkout@v4

      - name: ⬇️ Setup Project
        run: | 
         echo Installing Node Modules
         npm ci --omit-dev

      # - name: Add Release Notes
      #   run: echo Release Notes not implemented.
    
      - name: ⬇️ Fetch Tags
        id: latest-tag
        run: |
          git fetch --tags origin
          git describe --tags $(git rev-list --tags --max-count=1) > output.txt
          echo "::set-output name=tag::$(cat output.txt)"

      - name: 🕵️ Show latest fetched tag
        run: echo ${{ steps.latest-tag.outputs.tag }}

      - name: 🏗️ Build Package
        run: npm run build

      # - name: Run Test Cases
      #   run: echo Test Cases not implemented.

      - name: 📦 Create Package
        run: npm pack ./dist/


      - name: 🚀 Create Release
        id: create_release
        run: gh release create ${{ steps.latest-tag.outputs.tag }} *.tgz --title ${{ steps.latest-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
